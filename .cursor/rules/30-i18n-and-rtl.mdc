---
description: 国际化（Chrome i18n）与 RTL 方向设置规范
globs: "src/**/*"
---
# 国际化与 RTL 规范

- **Chrome i18n**：文案应从 `_locales/*/messages.json` 读取，示例：
  - 英文：[ _locales/en/messages.json ](mdc:_locales/en/messages.json)
- **工具函数**：使用 [src/utils/i18n.ts](mdc:src/utils/i18n.ts) 获取文案，使用 [src/utils/rtl.ts](mdc:src/utils/rtl.ts) 处理方向。
- **方向与布局**：根据语言调用 `setDocumentDirection()` 设置 `dir="rtl|ltr"`，确保组件在 RTL 下布局正确。
- **不要硬编码**：避免在 UI 中写死字符串；新增文案需同时补齐各语言或提供合理回退。

---
globs: src/**/*.ts,src/**/*.tsx
description: 国际化（Chrome i18n）与 RTL 方向设置规范
---
## i18n 与 RTL

- **消息函数**：使用 [src/utils/i18n.ts](mdc:src/utils/i18n.ts) 的 `t(key, substitutions?)`，在缺失或调用异常时回退为 `key`。
- **UI 方向**：在页面入口按 UI 语言设置 `dir` 与 `lang`：

```ts
import { getUILocale, isRTLLanguage } from '@/utils/rtl';
const ui = getUILocale();
document.documentElement.setAttribute('dir', isRTLLanguage(ui) ? 'rtl' : 'ltr');
document.documentElement.setAttribute('lang', ui);
```

- **CSS 层**：`tailwind.css` 中 `body { direction: __MSG_@@bidi_dir__; }` 依赖 Chrome 本地化替换。不要移除该占位符。
- **本地化目录**：在 [_locales/](mdc:_locales) 中新增/维护 `messages.json`，键名与 `t()` 调用保持一致。
- **类型提示**：可在组件内维护受控的语言代码联合类型（参照 `popup.tsx` 的 `LanguageCode`）。

