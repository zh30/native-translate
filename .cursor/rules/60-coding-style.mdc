---
globs: *.ts,*.tsx
description: 代码风格、命名与可维护性
---
## 代码风格

- **命名**：避免 1-2 字母的短名。函数用动词短语，变量用名词短语。保持清晰可读。
- **类型**：组件 Props、返回值与公共 API 必须显式类型。尽量避免 `any`。
- **控制流**：使用早返回，捕获错误需有意义的处理；不要无意义吞错。
- **注释**：仅在复杂处添加“为什么”，避免赘述“做什么”。
- **格式化**：遵循 Biome；不要在无关行做大范围重排。
- **文件组织**：
  - 组件：`src/components/`
  - 页面：`src/popup/`、`src/sidePanel/`
  - 工具：`src/utils/`
  - 类型：`src/types/`（如新增公共类型）

## React 组件

- 使用函数式组件与自动 JSX 运行时；优先 `React.FC<Props>`。
- 状态管理优先 `useState`/`useReducer`，跨组件简易场景可用 Context。
- 需要 Portal/浮层的组件注意 `z-index` 与注入上下文（内容脚本环境）。

