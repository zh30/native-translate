name: Release on Tag

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Verify zip exists
        run: test -f Native-translate.zip && ls -lh Native-translate.zip

      - name: Generate changelog from commits
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --force
          TAG="${GITHUB_REF_NAME}"
          # Find previous semver tag (descending order), excluding current
          PREV_TAG=$(git tag --list 'v*' --sort=-v:refname | grep -v "^${TAG}$" | head -n 1 || true)
          if [ -n "${PREV_TAG}" ]; then
            RANGE="${PREV_TAG}..${TAG}"
          else
            # First tag â€” include all history up to current tag
            RANGE="${TAG}"
          fi
          echo "Using range: ${RANGE} (prev: ${PREV_TAG:-none})"
          COMMITS=$(git log --pretty=format:'- %s' ${RANGE} || true)
          if [ -z "${COMMITS}" ]; then
            COMMITS="- No changes."
          fi
          {
            echo "text<<EOF"
            echo "Changes in ${TAG}"
            echo
            echo "${COMMITS}"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          generate_release_notes: false
          body: ${{ steps.changelog.outputs.text }}
          draft: false
          prerelease: false
          files: |
            Native-translate.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
